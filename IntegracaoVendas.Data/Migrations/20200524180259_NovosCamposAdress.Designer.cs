// <auto-generated />
using IntegracaoVendas.Data.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntegracaoVendas.Data.Migrations
{
    [DbContext(typeof(IntegracaoDbContext))]
    [Migration("20200524180259_NovosCamposAdress")]
    partial class NovosCamposAdress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.BillingAddress", b =>
                {
                    b.Property<int>("BillingAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingAddressId");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasFilter("[OrderNumber] IS NOT NULL");

                    b.ToTable("BillingAddresses");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineCustomerPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineListPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineTaxAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCustomerPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitListPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineItemId");

                    b.HasIndex("OrderNumber");

                    b.ToTable("LineItens");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.Order", b =>
                {
                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Culture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDiscountTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTaxTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderNumber");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.Payment", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdyenInstallmentsNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaymentCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasFilter("[OrderNumber] IS NOT NULL");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.Shipment", b =>
                {
                    b.Property<string>("ShipmentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentTaxAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentID");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasFilter("[OrderNumber] IS NOT NULL");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.BillingAddress", b =>
                {
                    b.HasOne("IntegracaoVendas.Dominio.Models.Order", "Order")
                        .WithOne("BillingAddress")
                        .HasForeignKey("IntegracaoVendas.Dominio.Models.BillingAddress", "OrderNumber");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.LineItem", b =>
                {
                    b.HasOne("IntegracaoVendas.Dominio.Models.Order", "Order")
                        .WithMany("LineItem")
                        .HasForeignKey("OrderNumber");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.Payment", b =>
                {
                    b.HasOne("IntegracaoVendas.Dominio.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("IntegracaoVendas.Dominio.Models.Payment", "OrderNumber");
                });

            modelBuilder.Entity("IntegracaoVendas.Dominio.Models.Shipment", b =>
                {
                    b.HasOne("IntegracaoVendas.Dominio.Models.Order", "Order")
                        .WithOne("Shipment")
                        .HasForeignKey("IntegracaoVendas.Dominio.Models.Shipment", "OrderNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
